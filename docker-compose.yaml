version: "3.2"

services:
  postgres:
    image: postgres:10.0
    volumes:
      - postgres-data:/var/lib/postgresql/data
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DATABASE: postgres

  redis:
    image: redis:alpine
    command: ["redis-server", "--save", "3600", "10"]
    volumes:
      - redis-data:/data

  api:
    build: .
    command: gunicorn -w 6 -b 0.0.0.0:5000 --log-level debug --log-file - bard.wsgi:app
    expose:
      - 8000
    depends_on:
      - postgres
    tmpfs:
      - /tmp
    volumes:
      - archive-data:/data
    env_file:
      - dakobed.env

  ui:
    build:
      context: ui
#    image: dakobedio/dakobed-ui:${DAKOBED_TAG:-latest}
#    depends_on:
#      - api
    command: npm run start
    ports:
      - "127.0.0.1:8080:8080"
    volumes:
      - "./ui/src:/dakobedui/src"
      - "./ui/package.json:/dakobedui/package.json"
    environment:
      PORT: "8080"
      CI: "true"
    env_file:
      - dakobed.env


volumes:
  archive-data: {}
  postgres-data: {}
  redis-data: {}
  elasticsearch-data: {}

